{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nconst studentApi = createApi({\n  reducerPath: 'studentApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:1337/api/\",\n    prepareHeaders: () => {} //可以用来统一设置请求头\n\n  }),\n  tagTypes: ['student'],\n\n  //用来指定Api中的类型\n  endpoints(build) {\n    return {\n      getStudents: build.query({\n        query() {\n          return {\n            url: 'students' // 这里是一个个加请求头放token，可以统一防止baseQuery里加\n            // headers:{\n            //     Authorization:\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaWF0IjoxNjcxOTcxMjE0LCJleHAiOjE2NzQ1NjMyMTR9.4MEE7D8-MunGZqaxyfQVC9L_8oh4Fny_rZNlCPopRxk\"\n            // }\n\n          };\n        },\n\n        // 用来转换响应数据\n        transformResponse(baseQueryReturnValue) {\n          return baseQueryReturnValue.data;\n        },\n\n        // providesTags:['student'] //打上标签\n        providesTags: [{\n          type: 'student',\n          id: 'LIST'\n        }]\n      }),\n      getStudentById: build.query({\n        query(id) {\n          return `students/${id}`;\n        },\n\n        transformResponse(baseQueryReturnValue) {\n          return baseQueryReturnValue.data;\n        },\n\n        // 配置数据缓存的时间,单位是秒 从数据没被使用的时间开始计时   0表示不缓存  默认是60s\n        // keepUnusedDataFor:0 \n        keepUnusedDataFor: 60,\n        //60s\n        providesTags: (result, error, id) => [{\n          type: 'student',\n          id\n        }]\n      }),\n      delStudent: build.mutation({\n        query(id) {\n          return {\n            // 如果发送的不是get请求，需要返回一个对象来设置请求的消息\n            url: `students/${id}`,\n            method: 'delete'\n          };\n        }\n\n      }),\n      addStudent: build.mutation({\n        query(stu) {\n          return {\n            url: 'students',\n            method: 'post',\n            body: {\n              data: stu //RTKQ会自动转换为JSON，所以传个对象就可以\n\n            }\n          };\n        },\n\n        invalidatesTags: [{\n          type: 'student',\n          id: 'LIST'\n        }] //使标签失效  当我们调用addStudent的时候，会使上面带student标签的getStudents失效，会触发getStudents的自动执行，效果是自动刷新\n\n      }),\n      updateStudent: build.mutation({\n        query(stu) {\n          return {\n            url: `students/${stu.id}`,\n            method: 'put',\n            body: {\n              data: stu.attributes\n            }\n          };\n        },\n\n        invalidatesTags: (result, error, stu) => [{\n          type: 'student',\n          id: stu.id\n        }, {\n          type: 'student',\n          id: 'LIST'\n        }]\n      })\n    };\n  }\n\n});\nexport const {\n  useGetStudentsQuery,\n  useGetStudentByIdQuery,\n  useDelStudentMutation,\n  useAddStudentMutation,\n  useUpdateStudentMutation\n} = studentApi;\nexport default studentApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","studentApi","reducerPath","baseQuery","baseUrl","prepareHeaders","tagTypes","endpoints","build","getStudents","query","url","transformResponse","baseQueryReturnValue","data","providesTags","type","id","getStudentById","keepUnusedDataFor","result","error","delStudent","mutation","method","addStudent","stu","body","invalidatesTags","updateStudent","attributes","useGetStudentsQuery","useGetStudentByIdQuery","useDelStudentMutation","useAddStudentMutation","useUpdateStudentMutation"],"sources":["D:/前端学习/00-react/00-React/05_React-Router/08_auth-demo/src/store/api/studentApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\r\n\r\nconst studentApi = createApi({\r\n    reducerPath: 'studentApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: \"http://localhost:1337/api/\",\r\n        prepareHeaders: () => {\r\n            \r\n        }//可以用来统一设置请求头\r\n    }),\r\n    tagTypes: ['student'], //用来指定Api中的类型\r\n    endpoints(build) {\r\n        return {\r\n            getStudents: build.query({\r\n                query() {\r\n                    return {\r\n                        url:'students',\r\n                        // 这里是一个个加请求头放token，可以统一防止baseQuery里加\r\n                        // headers:{\r\n                        //     Authorization:\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaWF0IjoxNjcxOTcxMjE0LCJleHAiOjE2NzQ1NjMyMTR9.4MEE7D8-MunGZqaxyfQVC9L_8oh4Fny_rZNlCPopRxk\"\r\n                        // }\r\n                    }\r\n                },\r\n                // 用来转换响应数据\r\n                transformResponse(baseQueryReturnValue) {\r\n                    return baseQueryReturnValue.data\r\n                },\r\n                // providesTags:['student'] //打上标签\r\n                providesTags: [{ type: 'student', id: 'LIST' }]\r\n            }),\r\n            getStudentById: build.query({\r\n                query(id) {\r\n                    return `students/${id}`\r\n                },\r\n                transformResponse(baseQueryReturnValue) {\r\n                    return baseQueryReturnValue.data\r\n                },\r\n                // 配置数据缓存的时间,单位是秒 从数据没被使用的时间开始计时   0表示不缓存  默认是60s\r\n                // keepUnusedDataFor:0 \r\n                keepUnusedDataFor: 60,   //60s\r\n                providesTags: (result, error, id) => [{\r\n                    type: 'student',\r\n                    id\r\n                }]\r\n            }),\r\n            delStudent: build.mutation({\r\n                query(id) {\r\n                    return {\r\n                        // 如果发送的不是get请求，需要返回一个对象来设置请求的消息\r\n                        url: `students/${id}`,\r\n                        method: 'delete'\r\n                    }\r\n                },\r\n            }),\r\n            addStudent: build.mutation({\r\n                query(stu) {\r\n                    return {\r\n                        url: 'students',\r\n                        method: 'post',\r\n                        body: {\r\n                            data: stu  //RTKQ会自动转换为JSON，所以传个对象就可以\r\n                        }\r\n                    }\r\n                },\r\n                invalidatesTags: [{ type: 'student', id: 'LIST' }] //使标签失效  当我们调用addStudent的时候，会使上面带student标签的getStudents失效，会触发getStudents的自动执行，效果是自动刷新\r\n            }),\r\n            updateStudent: build.mutation({\r\n                query(stu) {\r\n                    return {\r\n                        url: `students/${stu.id}`,\r\n                        method: 'put',\r\n                        body: {\r\n                            data: stu.attributes\r\n                        }\r\n                    }\r\n                },\r\n                invalidatesTags: (result, error, stu) => [{\r\n                    type: 'student',\r\n                    id: stu.id\r\n                }, {\r\n                    type: 'student',\r\n                    id: 'LIST'\r\n                }]\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nexport const { useGetStudentsQuery, useGetStudentByIdQuery, useDelStudentMutation, useAddStudentMutation, useUpdateStudentMutation } = studentApi\r\nexport default studentApi"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,mCAA1C;AAEA,MAAMC,UAAU,GAAGF,SAAS,CAAC;EACzBG,WAAW,EAAE,YADY;EAEzBC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAE,4BADa;IAEtBC,cAAc,EAAE,MAAM,CAErB,CAJqB,CAIrB;;EAJqB,CAAD,CAFA;EAQzBC,QAAQ,EAAE,CAAC,SAAD,CARe;;EAQF;EACvBC,SAAS,CAACC,KAAD,EAAQ;IACb,OAAO;MACHC,WAAW,EAAED,KAAK,CAACE,KAAN,CAAY;QACrBA,KAAK,GAAG;UACJ,OAAO;YACHC,GAAG,EAAC,UADD,CAEH;YACA;YACA;YACA;;UALG,CAAP;QAOH,CAToB;;QAUrB;QACAC,iBAAiB,CAACC,oBAAD,EAAuB;UACpC,OAAOA,oBAAoB,CAACC,IAA5B;QACH,CAboB;;QAcrB;QACAC,YAAY,EAAE,CAAC;UAAEC,IAAI,EAAE,SAAR;UAAmBC,EAAE,EAAE;QAAvB,CAAD;MAfO,CAAZ,CADV;MAkBHC,cAAc,EAAEV,KAAK,CAACE,KAAN,CAAY;QACxBA,KAAK,CAACO,EAAD,EAAK;UACN,OAAQ,YAAWA,EAAG,EAAtB;QACH,CAHuB;;QAIxBL,iBAAiB,CAACC,oBAAD,EAAuB;UACpC,OAAOA,oBAAoB,CAACC,IAA5B;QACH,CANuB;;QAOxB;QACA;QACAK,iBAAiB,EAAE,EATK;QASC;QACzBJ,YAAY,EAAE,CAACK,MAAD,EAASC,KAAT,EAAgBJ,EAAhB,KAAuB,CAAC;UAClCD,IAAI,EAAE,SAD4B;UAElCC;QAFkC,CAAD;MAVb,CAAZ,CAlBb;MAiCHK,UAAU,EAAEd,KAAK,CAACe,QAAN,CAAe;QACvBb,KAAK,CAACO,EAAD,EAAK;UACN,OAAO;YACH;YACAN,GAAG,EAAG,YAAWM,EAAG,EAFjB;YAGHO,MAAM,EAAE;UAHL,CAAP;QAKH;;MAPsB,CAAf,CAjCT;MA0CHC,UAAU,EAAEjB,KAAK,CAACe,QAAN,CAAe;QACvBb,KAAK,CAACgB,GAAD,EAAM;UACP,OAAO;YACHf,GAAG,EAAE,UADF;YAEHa,MAAM,EAAE,MAFL;YAGHG,IAAI,EAAE;cACFb,IAAI,EAAEY,GADJ,CACS;;YADT;UAHH,CAAP;QAOH,CATsB;;QAUvBE,eAAe,EAAE,CAAC;UAAEZ,IAAI,EAAE,SAAR;UAAmBC,EAAE,EAAE;QAAvB,CAAD,CAVM,CAU4B;;MAV5B,CAAf,CA1CT;MAsDHY,aAAa,EAAErB,KAAK,CAACe,QAAN,CAAe;QAC1Bb,KAAK,CAACgB,GAAD,EAAM;UACP,OAAO;YACHf,GAAG,EAAG,YAAWe,GAAG,CAACT,EAAG,EADrB;YAEHO,MAAM,EAAE,KAFL;YAGHG,IAAI,EAAE;cACFb,IAAI,EAAEY,GAAG,CAACI;YADR;UAHH,CAAP;QAOH,CATyB;;QAU1BF,eAAe,EAAE,CAACR,MAAD,EAASC,KAAT,EAAgBK,GAAhB,KAAwB,CAAC;UACtCV,IAAI,EAAE,SADgC;UAEtCC,EAAE,EAAES,GAAG,CAACT;QAF8B,CAAD,EAGtC;UACCD,IAAI,EAAE,SADP;UAECC,EAAE,EAAE;QAFL,CAHsC;MAVf,CAAf;IAtDZ,CAAP;EAyEH;;AAnFwB,CAAD,CAA5B;AAsFA,OAAO,MAAM;EAAEc,mBAAF;EAAuBC,sBAAvB;EAA+CC,qBAA/C;EAAsEC,qBAAtE;EAA6FC;AAA7F,IAA0HlC,UAAhI;AACP,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}