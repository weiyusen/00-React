{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\00-react\\\\00-React\\\\05_React-Router\\\\08_auth-demo\\\\src\\\\components\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useRegisterMutation, useLoginMutation } from \"../store/api/authApi\";\nimport { login } from '../store/reducer/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  //记录当前表单是登录用的还是注册用的\n  const [isLoginForm, setIsLoginForm] = useState(true); // 引入注册的api \n  // useRegisterMutation返回一个数组，第一个是方法触发器，第二个是结果集\n\n  const [regFn, {\n    error: regError\n  }] = useRegisterMutation(); // 引入登录的api\n\n  const [loginFn, {\n    error: loginError\n  }] = useLoginMutation(); // 简单起见，用非受控组件\n\n  const usernameInp = useRef();\n  const pwdInp = useRef();\n  const emailInp = useRef(); // 获取dispatch\n\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault(); //不让表单自主提交\n    // 获取用户输入的内容 三步骤：1、通过useRef()生成一个对象 2、在jsx中通过ref={name}打标识 3、在这里拿到，里面的current指向DOM对象\n\n    const username = usernameInp.current.value;\n    const password = pwdInp.current.value; // 处理登录功能\n\n    if (isLoginForm) {\n      // console.log('登录--', username, password);\n      loginFn({\n        identifier: username,\n        password\n      }).then(res => {\n        if (!res.error) {\n          dispatch(login({\n            state: {\n              token: res.data.jwt,\n              user\n            }\n          })); // 登录成功 需要向系统中添加一个标识，标记用户的登录状态\n          // 登录状态（布尔值, jwt(token), 用户信息)\n          // 跳转页面到根目录\n        }\n      });\n    } else {\n      //注册\n      const email = emailInp.current.value; // regFn的结果是一个promise\n\n      regFn({\n        username,\n        password,\n        email\n      }).then(res => {\n        if (!res.error) {\n          // 注册成功\n          setIsLoginForm(true); //让用户回到登录表单\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: regError && regError.data.error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: loginError && \"用户名或密码错误\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoginForm ? '登录' : '注册'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: usernameInp,\n          type: \"text\",\n          placeholder: \"\\u7528\\u6237\\u540D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), // 注册才显示  需要电子邮件的div\n      !isLoginForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ref: emailInp,\n          placeholder: \"\\u7535\\u5B50\\u90AE\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: pwdInp,\n          type: \"password\",\n          placeholder: \"\\u5BC6\\u7801\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLoginForm ? '登录' : '注册'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: e => {\n            e.preventDefault();\n            setIsLoginForm(prevState => !prevState);\n          },\n          children: isLoginForm ? '没有账号？点击注册' : '已有账号？点击登录'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthForm, \"9aXVN1tKxdp9LiTnBn5QIV/lQno=\", false, function () {\n  return [useRegisterMutation, useLoginMutation, useDispatch];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useRef","useDispatch","useRegisterMutation","useLoginMutation","login","AuthForm","isLoginForm","setIsLoginForm","regFn","error","regError","loginFn","loginError","usernameInp","pwdInp","emailInp","dispatch","submitHandler","e","preventDefault","username","current","value","password","identifier","then","res","state","token","data","jwt","user","email","color","message","prevState"],"sources":["D:/前端学习/00-react/00-React/05_React-Router/08_auth-demo/src/components/AuthForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useRegisterMutation,useLoginMutation } from \"../store/api/authApi\"\r\nimport { login } from '../store/reducer/authSlice';\r\n\r\nconst AuthForm = () => {\r\n    //记录当前表单是登录用的还是注册用的\r\n    const [isLoginForm, setIsLoginForm] = useState(true)\r\n\r\n    // 引入注册的api \r\n    // useRegisterMutation返回一个数组，第一个是方法触发器，第二个是结果集\r\n    const [regFn, { error: regError }] = useRegisterMutation()\r\n    // 引入登录的api\r\n    const [loginFn, {error:loginError}] = useLoginMutation()\r\n\r\n    // 简单起见，用非受控组件\r\n    const usernameInp = useRef()\r\n    const pwdInp = useRef()\r\n    const emailInp = useRef()\r\n\r\n    // 获取dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault(); //不让表单自主提交\r\n        // 获取用户输入的内容 三步骤：1、通过useRef()生成一个对象 2、在jsx中通过ref={name}打标识 3、在这里拿到，里面的current指向DOM对象\r\n        const username = usernameInp.current.value\r\n        const password = pwdInp.current.value\r\n        // 处理登录功能\r\n        if (isLoginForm) {\r\n            // console.log('登录--', username, password);\r\n            loginFn({\r\n                identifier: username,\r\n                password\r\n            }).then(res => {\r\n                if(!res.error){\r\n                    dispatch(login({\r\n                        state:{\r\n                            token: res.data.jwt,\r\n                            user\r\n                        }\r\n                    }))\r\n                    // 登录成功 需要向系统中添加一个标识，标记用户的登录状态\r\n                    // 登录状态（布尔值, jwt(token), 用户信息)\r\n                    // 跳转页面到根目录\r\n                }\r\n            })\r\n        } else { //注册\r\n            const email = emailInp.current.value\r\n            // regFn的结果是一个promise\r\n            regFn({\r\n                username,\r\n                password,\r\n                email\r\n            }).then(res => {\r\n                if(!res.error){\r\n                    // 注册成功\r\n                    setIsLoginForm(true) //让用户回到登录表单\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <p style={{color:'red'}}>\r\n                {/* 显示错误信息 */}\r\n                {regError && regError.data.error.message}\r\n            </p>\r\n            <p style={{color:'red'}}>\r\n                {/* 显示错误信息 */}\r\n                {loginError && \"用户名或密码错误\"}\r\n            </p>\r\n            <h2>{isLoginForm ? '登录' : '注册'}</h2>\r\n            <form onSubmit={submitHandler}>\r\n                <div>\r\n                    <input ref={usernameInp} type=\"text\" placeholder='用户名' />\r\n                </div>\r\n                {\r\n                    // 注册才显示  需要电子邮件的div\r\n                    !isLoginForm &&\r\n                    <div>\r\n                        <input type=\"email\" ref={emailInp} placeholder='电子邮件' />\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <input ref={pwdInp} type=\"password\" placeholder='密码' />\r\n                </div>\r\n                <div>\r\n                    <button>{isLoginForm ? '登录' : '注册'}</button>\r\n                    <a href=\"#\" onClick={e => { e.preventDefault(); setIsLoginForm(prevState => !prevState) }}>\r\n                        {isLoginForm ? '没有账号？点击注册' : '已有账号？点击登录'}\r\n                    </a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}