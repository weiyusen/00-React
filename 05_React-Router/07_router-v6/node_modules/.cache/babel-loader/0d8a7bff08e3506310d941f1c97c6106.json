{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\00-react\\\\00-React\\\\05_React-Router\\\\07_router-v6\\\\src\\\\components\\\\Student.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STU_DATA = [{\n  id: 1,\n  name: '刘备'\n}, {\n  id: 2,\n  name: '关羽'\n}, {\n  id: 3,\n  name: '沙和尚'\n}, {\n  id: 4,\n  name: '唐僧'\n}];\nexport default function Student() {\n  _s();\n\n  // 可以使用useParams()来获取参数\n  const {\n    id\n  } = useParams();\n  const location = useLocation(); // 获取当前的地址信息\n  // v5的useRouteMatch没了\n  // useMatch用来检查当前url是否匹配某个路由\n  // 如果路径匹配，则返回一个对象，不匹配则返回null\n  //const match = useMatch(\"/student/:id\");\n  // v5的useHistory没了,因为主要只用跳转的功能，所以v6改为了useNavigate\n  // useNavigate获取一个用于条件页面的函数\n\n  const nav = useNavigate();\n  const stu = STU_DATA.find(item => item.id === +id);\n\n  const clickHandler = () => {\n    // nav('/about') //默认使用的是push方式，会产生历史记录\n    nav;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"\\u70B9\\u6211\\u4E00\\u4E0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [stu.id, \"----\", stu.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Student, \"hmKqHpEc92daVSwhvbawUHPno9A=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n\n_c = Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["React","useParams","useLocation","useNavigate","STU_DATA","id","name","Student","location","nav","stu","find","item","clickHandler"],"sources":["D:/前端学习/00-react/00-React/05_React-Router/07_router-v6/src/components/Student.js"],"sourcesContent":["import React from 'react'\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst STU_DATA = [\r\n    {\r\n        id:1,\r\n        name:'刘备'\r\n    },\r\n    {\r\n        id:2,\r\n        name:'关羽'\r\n    },\r\n    {\r\n        id:3,\r\n        name:'沙和尚'\r\n    },\r\n    {\r\n        id:4,\r\n        name:'唐僧'\r\n    },\r\n];\r\n\r\nexport default function Student() {\r\n\r\n    // 可以使用useParams()来获取参数\r\n    const {id} = useParams()\r\n\r\n    const location = useLocation();// 获取当前的地址信息\r\n\r\n    // v5的useRouteMatch没了\r\n    // useMatch用来检查当前url是否匹配某个路由\r\n    // 如果路径匹配，则返回一个对象，不匹配则返回null\r\n    //const match = useMatch(\"/student/:id\");\r\n\r\n    // v5的useHistory没了,因为主要只用跳转的功能，所以v6改为了useNavigate\r\n    // useNavigate获取一个用于条件页面的函数\r\n    const nav = useNavigate();\r\n\r\n    const stu = STU_DATA.find(item => item.id === +id)\r\n\r\n    const clickHandler = () => {\r\n        // nav('/about') //默认使用的是push方式，会产生历史记录\r\n        nav\r\n    }\r\n  return (\r\n    <div>\r\n        <button onClick={clickHandler}>点我一下</button>\r\n        <h2>{stu.id}----{stu.name}</h2>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,kBAApD;;AAEA,MAAMC,QAAQ,GAAG,CACb;EACIC,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC;AAFT,CADa,EAKb;EACID,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC;AAFT,CALa,EASb;EACID,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC;AAFT,CATa,EAab;EACID,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC;AAFT,CAba,CAAjB;AAmBA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAE9B;EACA,MAAM;IAACF;EAAD,IAAOJ,SAAS,EAAtB;EAEA,MAAMO,QAAQ,GAAGN,WAAW,EAA5B,CAL8B,CAKC;EAE/B;EACA;EACA;EACA;EAEA;EACA;;EACA,MAAMO,GAAG,GAAGN,WAAW,EAAvB;EAEA,MAAMO,GAAG,GAAGN,QAAQ,CAACO,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAY,CAACA,EAAnC,CAAZ;;EAEA,MAAMQ,YAAY,GAAG,MAAM;IACvB;IACAJ,GAAG;EACN,CAHD;;EAIF,oBACE;IAAA,wBACI;MAAQ,OAAO,EAAEI,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,WAAKH,GAAG,CAACL,EAAT,UAAiBK,GAAG,CAACJ,IAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA5BuBC,O;UAGPN,S,EAEIC,W,EASLC,W;;;KAdQI,O"},"metadata":{},"sourceType":"module"}