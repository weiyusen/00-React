{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\00-react\\\\00-React\\\\05_React-Router\\\\07_router-v6\\\\src\\\\components\\\\Student.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STU_DATA = [{\n  id: 1,\n  name: '刘备'\n}, {\n  id: 2,\n  name: '关羽'\n}, {\n  id: 3,\n  name: '沙和尚'\n}, {\n  id: 4,\n  name: '唐僧'\n}];\nexport default function Student() {\n  _s();\n\n  // 可以使用useParams()来获取参数\n  const {\n    id\n  } = useParams();\n  const location = useLocation(); // 获取当前的地址信息\n  // 如果路径匹配，则返回一个对象，不匹配则返回null\n  // v5的useRouteMatch没\n  //const match = useMatch(\"/student/:id\");// 用来检查当前url是否匹配某个路由\n  // useNavigate获取一个用于条件页面的函数\n\n  const nav = useNavigate();\n  const stu = STU_DATA.find(item => item.id === +id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [stu.id, \"----\", stu.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Student, \"hmKqHpEc92daVSwhvbawUHPno9A=\", true, function () {\n  return [useParams];\n});\n\n_c = Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["React","useParams","STU_DATA","id","name","Student","location","useLocation","nav","useNavigate","stu","find","item"],"sources":["D:/前端学习/00-react/00-React/05_React-Router/07_router-v6/src/components/Student.js"],"sourcesContent":["import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst STU_DATA = [\r\n    {\r\n        id:1,\r\n        name:'刘备'\r\n    },\r\n    {\r\n        id:2,\r\n        name:'关羽'\r\n    },\r\n    {\r\n        id:3,\r\n        name:'沙和尚'\r\n    },\r\n    {\r\n        id:4,\r\n        name:'唐僧'\r\n    },\r\n];\r\n\r\nexport default function Student() {\r\n\r\n    // 可以使用useParams()来获取参数\r\n    const {id} = useParams()\r\n\r\n    const location = useLocation();// 获取当前的地址信息\r\n\r\n    // 如果路径匹配，则返回一个对象，不匹配则返回null\r\n    // v5的useRouteMatch没\r\n    //const match = useMatch(\"/student/:id\");// 用来检查当前url是否匹配某个路由\r\n\r\n    // useNavigate获取一个用于条件页面的函数\r\n    const nav = useNavigate();\r\n\r\n    const stu = STU_DATA.find(item => item.id === +id)\r\n  return (\r\n    <div>\r\n        <h2>{stu.id}----{stu.name}</h2>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,QAAQ,GAAG,CACb;EACIC,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC;AAFT,CADa,EAKb;EACID,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC;AAFT,CALa,EASb;EACID,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC;AAFT,CATa,EAab;EACID,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC;AAFT,CAba,CAAjB;AAmBA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAE9B;EACA,MAAM;IAACF;EAAD,IAAOF,SAAS,EAAtB;EAEA,MAAMK,QAAQ,GAAGC,WAAW,EAA5B,CAL8B,CAKC;EAE/B;EACA;EACA;EAEA;;EACA,MAAMC,GAAG,GAAGC,WAAW,EAAvB;EAEA,MAAMC,GAAG,GAAGR,QAAQ,CAACS,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAY,CAACA,EAAnC,CAAZ;EACF,oBACE;IAAA,uBACI;MAAA,WAAKO,GAAG,CAACP,EAAT,UAAiBO,GAAG,CAACN,IAArB;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GApBuBC,O;UAGPJ,S;;;KAHOI,O"},"metadata":{},"sourceType":"module"}