{"ast":null,"code":"var _s = $RefreshSig$();\n/* 自定义钩子就是用来封装别的钩子\r\n*   React中的钩子函数只能在函数组件或自定钩子中调用\r\n*       当我们需要将React中钩子函数提取到一个公共区域时，就可以使用自定义钩子\r\n*\r\n*   自定义钩子其实就是一个普通函数，只是它的名字需要使用use开头\r\n* */\nimport { useEffect, useState, useCallback } from 'react';\n// reqObj用来存储请求的参数\n\nexport default function useFetch(reqObj) {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await fetch('http://localhost:1337/api/students');\n      if (res.ok) {\n        const data = await res.json();\n        setData(data.data);\n      } else {\n        throw new Error('数据加载失败！');\n      }\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // 设置返回值\n  return {\n    loading,\n    error,\n    data,\n    fetchData\n  };\n}\n_s(useFetch, \"+uM0h/kTomJvMS6MqnL7wl/MsBo=\");","map":{"version":3,"names":["useEffect","useState","useCallback","useFetch","reqObj","data","setData","loading","setLoading","error","setError","fetchData","res","fetch","ok","json","Error"],"sources":["D:/前端学习/00-react/00-React/04_react_app/src/hooks/useFetch.js"],"sourcesContent":["/* 自定义钩子就是用来封装别的钩子\r\n*   React中的钩子函数只能在函数组件或自定钩子中调用\r\n*       当我们需要将React中钩子函数提取到一个公共区域时，就可以使用自定义钩子\r\n*\r\n*   自定义钩子其实就是一个普通函数，只是它的名字需要使用use开头\r\n* */\r\nimport { useEffect, useState, useCallback } from 'react';\r\n// reqObj用来存储请求的参数\r\n\r\nexport default function useFetch(reqObj) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        try {\r\n            setLoading(true)\r\n            setError(null)\r\n            const res = await fetch('http://localhost:1337/api/students')\r\n            if (res.ok) {\r\n                const data = await res.json()\r\n                setData(data.data)\r\n            } else {\r\n                throw new Error('数据加载失败！')\r\n            }\r\n        } catch (error) {\r\n            setError(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    // 设置返回值\r\n    return {\r\n        loading,\r\n        error,\r\n        data,\r\n        fetchData\r\n    }\r\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACxD;;AAEA,eAAe,SAASC,QAAQ,CAACC,MAAM,EAAE;EAAA;EAErC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,SAAS,GAAGT,WAAW,CAAC,YAAY;IACtC,IAAI;MACAM,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAC7D,IAAID,GAAG,CAACE,EAAE,EAAE;QACR,MAAMT,IAAI,GAAG,MAAMO,GAAG,CAACG,IAAI,EAAE;QAC7BT,OAAO,CAACD,IAAI,CAACA,IAAI,CAAC;MACtB,CAAC,MAAM;QACH,MAAM,IAAIW,KAAK,CAAC,SAAS,CAAC;MAC9B;IACJ,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,SAAS;MACND,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,OAAO;IACHD,OAAO;IACPE,KAAK;IACLJ,IAAI;IACJM;EACJ,CAAC;AACL;AAAC,GA/BuBR,QAAQ"},"metadata":{},"sourceType":"module"}