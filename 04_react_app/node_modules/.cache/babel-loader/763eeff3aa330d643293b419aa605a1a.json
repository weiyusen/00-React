{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\00-react\\\\00-React\\\\04_react_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport B from './B';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  console.log('App组件重新渲染了！');\n  const [count, setCount] = useState(0);\n\n  // setTimeout(() => { setCount(1); }, 0) 也行\n  /**\r\n   * useEffect()是一个钩子函数，需要一个函数作为参数\r\n     这个作为参数的函数，将会在组件渲染完毕后执行   相当于vue的mounted\r\n     在开发中，可以将那些会产生副作用的代码编写到useEffect的回调函数中\r\n     这样就可以避免这些代码影响到组件的渲染\r\n   */\n  useEffect(() => {\n    setCount(1);\n  });\n  const clickHandler = () => {\n    console.log('点击按钮！');\n    setCount(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [count, /*#__PURE__*/_jsxDEV(B, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"\\u70B9\\u6211\\u4E00\\u4E0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","B","App","console","log","count","setCount","clickHandler"],"sources":["D:/前端学习/00-react/00-React/04_react_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport B from './B';\r\n\r\nconst App = () => {\r\n\r\n    console.log('App组件重新渲染了！');\r\n\r\n    const [count, setCount] = useState(0);\r\n\r\n    // setTimeout(() => { setCount(1); }, 0) 也行\r\n    /**\r\n     * useEffect()是一个钩子函数，需要一个函数作为参数\r\n       这个作为参数的函数，将会在组件渲染完毕后执行   相当于vue的mounted\r\n       在开发中，可以将那些会产生副作用的代码编写到useEffect的回调函数中\r\n       这样就可以避免这些代码影响到组件的渲染\r\n     */\r\n    useEffect(() => {\r\n        setCount(1)\r\n    });\r\n\r\n    const clickHandler = () => {\r\n        console.log('点击按钮！');\r\n        setCount(1);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {count}\r\n\r\n            <B />\r\n            <button onClick={clickHandler}>点我一下</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,KAAK;AAAC;AAEpB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEdC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAE1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA;AACJ;AACA;AACA;AACA;AACA;EACIC,SAAS,CAAC,MAAM;IACZM,QAAQ,CAAC,CAAC,CAAC;EACf,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAM;IACvBJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBE,QAAQ,CAAC,CAAC,CAAC;EACf,CAAC;EAED,oBACI;IAAA,WACKD,KAAK,eAEN,QAAC,CAAC;MAAA;MAAA;MAAA;IAAA,QAAG,eACL;MAAQ,OAAO,EAAEE,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAEd,CAAC;AAAC,GA9BIL,GAAG;AAAA,KAAHA,GAAG;AAgCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}