{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nconst studentApi = createApi({\n  reducerPath: 'studentApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:1337/api/\"\n  }),\n  tagTypes: ['student'],\n  //用来指定Api中的类型\n  endpoints(build) {\n    return {\n      getStudents: build.query({\n        query() {\n          return 'students';\n        },\n        // 用来转换响应数据\n        transformResponse(baseQueryReturnValue) {\n          return baseQueryReturnValue.data;\n        },\n        providesTags: ['student'] //打上标签\n      }),\n\n      getStudentById: build.query({\n        query(id) {\n          return `students/${id}`;\n        },\n        transformResponse(baseQueryReturnValue) {\n          return baseQueryReturnValue.data;\n        },\n        // 配置数据缓存的时间,单位是秒 从数据没被使用的时间开始计时   0表示不缓存  默认是60s\n        // keepUnusedDataFor:0 \n        keepUnusedDataFor: 60,\n        //60s\n        providesTags: () => {}\n      }),\n      delStudent: build.mutation({\n        query(id) {\n          return {\n            // 如果发送的不是get请求，需要返回一个对象来设置请求的消息\n            url: `students/${id}`,\n            method: 'delete'\n          };\n        }\n      }),\n      addStudent: build.mutation({\n        query(stu) {\n          return {\n            url: 'students',\n            method: 'post',\n            body: {\n              data: stu //RTKQ会自动转换为JSON，所以传个对象就可以\n            }\n          };\n        },\n\n        invalidatesTags: ['student'] //使标签失效  当我们调用addStudent的时候，会使上面带student标签的getStudents失效，会触发getStudents的自动执行，效果是自动刷新\n      }),\n\n      updateStudent: build.mutation({\n        query(stu) {\n          return {\n            url: `students/${stu.id}`,\n            method: 'put',\n            body: {\n              data: stu.attributes\n            }\n          };\n        },\n        invalidatesTags: ['student']\n      })\n    };\n  }\n});\nexport const {\n  useGetStudentsQuery,\n  useGetStudentByIdQuery,\n  useDelStudentMutation,\n  useAddStudentMutation,\n  useUpdateStudentMutation\n} = studentApi;\nexport default studentApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","studentApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","build","getStudents","query","transformResponse","baseQueryReturnValue","data","providesTags","getStudentById","id","keepUnusedDataFor","delStudent","mutation","url","method","addStudent","stu","body","invalidatesTags","updateStudent","attributes","useGetStudentsQuery","useGetStudentByIdQuery","useDelStudentMutation","useAddStudentMutation","useUpdateStudentMutation"],"sources":["D:/前端学习/00-react/00-React/04_react_app/src/store/studentApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\r\n\r\nconst studentApi = createApi({\r\n    reducerPath: 'studentApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: \"http://localhost:1337/api/\"\r\n    }),\r\n    tagTypes:['student'], //用来指定Api中的类型\r\n    endpoints(build) {\r\n        return {\r\n            getStudents: build.query({\r\n                query() {\r\n                    return 'students'\r\n                },\r\n                // 用来转换响应数据\r\n                transformResponse(baseQueryReturnValue) {\r\n                    return baseQueryReturnValue.data\r\n                },\r\n                providesTags:['student'] //打上标签\r\n            }),\r\n            getStudentById: build.query({\r\n                query(id) {\r\n                    return `students/${id}`\r\n                },\r\n                transformResponse(baseQueryReturnValue) {\r\n                    return baseQueryReturnValue.data\r\n                },\r\n                // 配置数据缓存的时间,单位是秒 从数据没被使用的时间开始计时   0表示不缓存  默认是60s\r\n                // keepUnusedDataFor:0 \r\n                keepUnusedDataFor:60,   //60s\r\n                providesTags:() => {} \r\n            }),\r\n            delStudent:build.mutation({\r\n                query(id){\r\n                    return {\r\n                        // 如果发送的不是get请求，需要返回一个对象来设置请求的消息\r\n                        url:`students/${id}`,\r\n                        method:'delete'\r\n                    }\r\n                },\r\n            }),\r\n            addStudent:build.mutation({\r\n                query(stu){\r\n                    return {\r\n                        url:'students',\r\n                        method:'post',\r\n                        body:{\r\n                            data:stu  //RTKQ会自动转换为JSON，所以传个对象就可以\r\n                        }\r\n                    }\r\n                },\r\n                invalidatesTags:['student'] //使标签失效  当我们调用addStudent的时候，会使上面带student标签的getStudents失效，会触发getStudents的自动执行，效果是自动刷新\r\n            }),\r\n            updateStudent:build.mutation({\r\n                query(stu){\r\n                    return {\r\n                        url:`students/${stu.id}`,\r\n                        method:'put',\r\n                        body:{\r\n                            data:stu.attributes\r\n                        }\r\n                    }\r\n                },\r\n                invalidatesTags:['student']\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nexport const { useGetStudentsQuery, useGetStudentByIdQuery,useDelStudentMutation, useAddStudentMutation, useUpdateStudentMutation } = studentApi\r\nexport default studentApi"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,mCAAmC;AAE7E,MAAMC,UAAU,GAAGF,SAAS,CAAC;EACzBG,WAAW,EAAE,YAAY;EACzBC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,QAAQ,EAAC,CAAC,SAAS,CAAC;EAAE;EACtBC,SAAS,CAACC,KAAK,EAAE;IACb,OAAO;MACHC,WAAW,EAAED,KAAK,CAACE,KAAK,CAAC;QACrBA,KAAK,GAAG;UACJ,OAAO,UAAU;QACrB,CAAC;QACD;QACAC,iBAAiB,CAACC,oBAAoB,EAAE;UACpC,OAAOA,oBAAoB,CAACC,IAAI;QACpC,CAAC;QACDC,YAAY,EAAC,CAAC,SAAS,CAAC,CAAC;MAC7B,CAAC,CAAC;;MACFC,cAAc,EAAEP,KAAK,CAACE,KAAK,CAAC;QACxBA,KAAK,CAACM,EAAE,EAAE;UACN,OAAQ,YAAWA,EAAG,EAAC;QAC3B,CAAC;QACDL,iBAAiB,CAACC,oBAAoB,EAAE;UACpC,OAAOA,oBAAoB,CAACC,IAAI;QACpC,CAAC;QACD;QACA;QACAI,iBAAiB,EAAC,EAAE;QAAI;QACxBH,YAAY,EAAC,MAAM,CAAC;MACxB,CAAC,CAAC;MACFI,UAAU,EAACV,KAAK,CAACW,QAAQ,CAAC;QACtBT,KAAK,CAACM,EAAE,EAAC;UACL,OAAO;YACH;YACAI,GAAG,EAAE,YAAWJ,EAAG,EAAC;YACpBK,MAAM,EAAC;UACX,CAAC;QACL;MACJ,CAAC,CAAC;MACFC,UAAU,EAACd,KAAK,CAACW,QAAQ,CAAC;QACtBT,KAAK,CAACa,GAAG,EAAC;UACN,OAAO;YACHH,GAAG,EAAC,UAAU;YACdC,MAAM,EAAC,MAAM;YACbG,IAAI,EAAC;cACDX,IAAI,EAACU,GAAG,CAAE;YACd;UACJ,CAAC;QACL,CAAC;;QACDE,eAAe,EAAC,CAAC,SAAS,CAAC,CAAC;MAChC,CAAC,CAAC;;MACFC,aAAa,EAAClB,KAAK,CAACW,QAAQ,CAAC;QACzBT,KAAK,CAACa,GAAG,EAAC;UACN,OAAO;YACHH,GAAG,EAAE,YAAWG,GAAG,CAACP,EAAG,EAAC;YACxBK,MAAM,EAAC,KAAK;YACZG,IAAI,EAAC;cACDX,IAAI,EAACU,GAAG,CAACI;YACb;UACJ,CAAC;QACL,CAAC;QACDF,eAAe,EAAC,CAAC,SAAS;MAC9B,CAAC;IACL,CAAC;EACL;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,mBAAmB;EAAEC,sBAAsB;EAACC,qBAAqB;EAAEC,qBAAqB;EAAEC;AAAyB,CAAC,GAAG9B,UAAU;AAChJ,eAAeA,UAAU"},"metadata":{},"sourceType":"module"}