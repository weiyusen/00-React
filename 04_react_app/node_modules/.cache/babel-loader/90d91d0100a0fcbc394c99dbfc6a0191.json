{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Student = _ref => {\n  _s();\n  let {\n    stu: {\n      id,\n      attributes: {\n        name,\n        age,\n        gender,\n        address\n      }\n    }\n  } = _ref;\n  // {stu:{id, attributes:{name, age, gender, address}}} = props  解构赋值 \n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const delStu = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      // 删除学生\n      // http://localhost:1337/api/students/id\n      const res = fetch(`http://localhost:1337/api/students/${id}`, {\n        // fetch的第二个参数用来配置请求的详细信息\n        method: 'delete'\n      });\n      // 判断是否成功\n      if (!res.ok) {\n        throw new Error('删除失败！');\n      }\n\n      // const data = await (await res).json() //被删除的学生\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const deleteHandler = () => {\n    delStu();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Student, \"i5ojzE2UWc0kkg8cPa5dAtnMvPw=\");\n_c = Student;\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["React","useState","useCallback","Student","stu","id","attributes","name","age","gender","address","loading","setLoading","error","setError","delStu","res","fetch","method","ok","Error","deleteHandler"],"sources":["D:/前端学习/00-react/00-React/04_react_app/src/components/Student.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\n\r\nconst Student = ({ stu: { id, attributes: { name, age, gender, address } } }) => {\r\n    // {stu:{id, attributes:{name, age, gender, address}}} = props  解构赋值 \r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const delStu = useCallback(async () => {\r\n        try {\r\n            setLoading(true)\r\n            setError(null)\r\n            // 删除学生\r\n            // http://localhost:1337/api/students/id\r\n            const res = fetch(`http://localhost:1337/api/students/${id}`, {\r\n                // fetch的第二个参数用来配置请求的详细信息\r\n                method: 'delete'\r\n            })\r\n            // 判断是否成功\r\n            if(!res.ok) {\r\n                throw new Error('删除失败！')\r\n            }\r\n\r\n            // const data = await (await res).json() //被删除的学生\r\n        } catch (error) {\r\n            setError(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    const deleteHandler = () => {\r\n        delStu()\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        </>\r\n        \r\n    );\r\n};\r\n\r\nexport default Student;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC;AAAA;AAErD,MAAMC,OAAO,GAAG,QAAiE;EAAA;EAAA,IAAhE;IAAEC,GAAG,EAAE;MAAEC,EAAE;MAAEC,UAAU,EAAE;QAAEC,IAAI;QAAEC,GAAG;QAAEC,MAAM;QAAEC;MAAQ;IAAE;EAAE,CAAC;EACxE;;EAEA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,MAAM,GAAGb,WAAW,CAAC,YAAY;IACnC,IAAI;MACAU,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd;MACA;MACA,MAAME,GAAG,GAAGC,KAAK,CAAE,sCAAqCZ,EAAG,EAAC,EAAE;QAC1D;QACAa,MAAM,EAAE;MACZ,CAAC,CAAC;MACF;MACA,IAAG,CAACF,GAAG,CAACG,EAAE,EAAE;QACR,MAAM,IAAIC,KAAK,CAAC,OAAO,CAAC;MAC5B;;MAEA;IACJ,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,SAAS;MACND,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,aAAa,GAAG,MAAM;IACxBN,MAAM,EAAE;EACZ,CAAC;EAED,oBACI,qCAEG;AAGX,CAAC;AAAC,GAtCIZ,OAAO;AAAA,KAAPA,OAAO;AAwCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}